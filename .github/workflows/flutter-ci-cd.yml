name: Flutter CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  flutter-build-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.29.1'
          channel: 'stable'

      - name: Install dependencies
        run: flutter pub get

      - name: Verify Dart formatting
        run: dart format --output=none --set-exit-if-changed .

      - name: Analyze project source
        run: flutter analyze

      - name: Run tests
        run: flutter test

      - name: Build web
        run: flutter build web

  firebase-functions:
    runs-on: ubuntu-latest
    needs: flutter-build-test
    defaults:
      run:
        working-directory: functions
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      - name: Install dependencies
        run: npm ci

      - name: Lint Firebase Functions
        run: npm run lint

      - name: Build Firebase Functions
        run: npm run build

  windows-build:
    runs-on: windows-latest
    needs: flutter-build-test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.29.1'
          channel: 'stable'

      - name: Install dependencies
        run: flutter pub get

      - name: Build Windows
        run: flutter build windows

      - name: Upload Windows build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: windows-build
          path: build/windows/x64/runner/Release/
          retention-days: 7

  deploy-preview:
    runs-on: ubuntu-latest
    needs: [flutter-build-test, firebase-functions]
    if: github.event_name == 'pull_request'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.29.1'
          channel: 'stable'

      - name: Install dependencies
        run: flutter pub get

      - name: Build web
        run: flutter build web

      - name: Set up Firebase
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: "${{ secrets.GITHUB_TOKEN }}"
          firebaseServiceAccount: "${{ secrets.FIREBASE_SERVICE_ACCOUNT }}"
          projectId: ${{ vars.FIREBASE_PROJECT_ID || 'your-firebase-project-id' }}
          channelId: pr-${{ github.event.number }}

  deploy-production:
    runs-on: ubuntu-latest
    needs: [flutter-build-test, firebase-functions]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.29.1'
          channel: 'stable'

      - name: Install dependencies
        run: flutter pub get

      - name: Build web
        run: flutter build web

      - name: Deploy to Firebase
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: "${{ secrets.GITHUB_TOKEN }}"
          firebaseServiceAccount: "${{ secrets.FIREBASE_SERVICE_ACCOUNT }}"
          channelId: live
          projectId: ${{ vars.FIREBASE_PROJECT_ID || 'your-firebase-project-id' }}
